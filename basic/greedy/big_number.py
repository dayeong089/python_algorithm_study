'''
<큰 수의 법칙>
큰수의 법칙은 다양한 수로 이루어진 배열이 있을 때 주어진 수들을 M번 더하여 가장 큰수를 만드는 방법이다. 
단, 배열의 특정한 인덱스에 해당하는 수가 연속해서 K번을 초과하여 더해질 수 없는 것이 이 법칙의 특징이다.

-input-
첫째 줄에 N(2 <= N <= 1000), M(1 <= M <= 10000), K(1 <= K <= 10000) 의 자연수가 주어지며 각자연수는 공백으로 구분한다.
둘째 줄에 N개의 자연수가 주어진다. 각 자연수는 공백으로 구분한다.
단, 각각의 자연수는 1 이상 10000 이하의 수로 주어진다.
입력으로 주어지는 K는 항상 M보다 작거나 같다.
-output-
첫째 줄에 큰수의 법칙에 따라 더해진 답을 출력한다.

>> 배열의 가장 큰 수와 두 번째로 큰 수만 사용
>> 반복문을 사용해서 풀 수도 있지만 시간초과가 발생하므로, 가장 큰 수 K개와 두 번째로 큰 수 1개로 이루어진 수열을 반복하여 더한다고 생각하여 반복문 없이 수학적 계산법으로 해결
'''

import sys
r = sys.stdin.readline

N, M, K = map(int, r().split(" "))
lst = list(map(int, r().split(" ")))

lst.sort(reverse = True)
num = 0

x = M//(K+1)
y = M%(K+1)
num += (lst[0]*K + lst[1])*x
num += lst[0]*y

print(num)
